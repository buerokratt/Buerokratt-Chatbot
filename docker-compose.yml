version: "3.9"

services:
  ruuter-public:
    container_name: ruuter-public
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:8086,http://localhost:3001,http://localhost:3003,http://localhost:3004,http://localhost:8080
      - application.httpCodesAllowList=200,201,202,400,401,403,500
      - application.internalRequests.allowedIPs=127.0.0.1
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8086
    volumes:
      - ./DSL/Ruuter.public/DSL:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8086:8086
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "512M"

  ruuter-private:
    container_name: ruuter-private
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:8082,http://localhost:3001,http://localhost:3003
      - application.httpCodesAllowList=200,201,202,204,400,401,403,500
      - application.internalRequests.allowedIPs=127.0.0.1
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8088
    volumes:
      - ./DSL/Ruuter.private/DSL:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8088:8088
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "512M"

  tim:
    container_name: tim
    image: tim
    depends_on:
      - tim-postgresql
    environment:
      - SECURITY_ALLOWLIST_JWT=ruuter-private,ruuter-public,data-mapper,resql,tim,tim-postgresql,chat-widget,authentication-layer,127.0.0.1,::1
    ports:
      - 8085:8085
    networks:
      - bykstack
    extra_hosts:
      - "host.docker.internal:host-gateway"
    cpus: "0.5"
    mem_limit: "512M"

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./tim-db:/var/lib/postgresql/data
    ports:
      - 9876:5432
    networks:
      - bykstack

  data-mapper:
    container_name: data-mapper
    image: data-mapper
    environment:
      - PORT=3000
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL/DMapper/hbs:/workspace/app/views/chat-bot
      - ./DSL/DMapper/js:/workspace/app/js/chat-bot
      - ./DSL/DMapper/lib:/workspace/app/lib
    ports:
      - 3000:3000
    networks:
      - bykstack

  resql:
    container_name: resql
    image: resql
    depends_on:
      - users_db
    environment:
      - sqlms.datasources.[0].name=byk
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5433/byk?sslmode=require
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=2nH09n6Gly
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8082:8082
    volumes:
      - ./DSL/Resql:/workspace/app/templates/byk
    networks:
      - bykstack

  users_db:
    container_name: users_db
    image: postgres:14.1
    environment:
      - POSTGRES_USER=byk
      - POSTGRES_PASSWORD=01234
      - POSTGRES_DB=byk
    ports:
      - 5433:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - bykstack

  resql_training:
    container_name: resql-training
    image: resql
    environment:
      - sqlms.datasources.[0].name=training
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5434/train_db
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=01234
      - logging.level.org.springframework.boot=INFO
      - server.port=8083
    ports:
      - 8083:8083
    volumes:
      - ./DSL/Resql.training:/workspace/app/templates/training
    networks:
      - bykstack

  gui:
    container_name: gui
    environment:
      - NODE_ENV=development
      - BASE_URL=http://localhost:8080
      - REACT_APP_RUUTER_API_URL=http://localhost:8086
      - REACT_APP_RUUTER_PRIVATE_API_URL=http://localhost:8088
      - REACT_APP_CUSTOMER_SERVICE_LOGIN=http://localhost:3004/et/dev-auth
      - REACT_APP_NOTIFICATION_NODE_URL=http://localhost:4040
      - REACT_APP_CSP=upgrade-insecure-requests; default-src 'self'; font-src 'self' data:; img-src 'self' data:; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self' http://localhost:8086 http://localhost:8088 http://localhost:8085 http://localhost:4040 https://admin.dev.buerokratt.ee/chat/menu.json;
      - DEBUG_ENABLED=true
      - CHOKIDAR_USEPOLLING=true
      - PORT=3001
      - REACT_APP_BUEROKRATT_CHATBOT_URL=http://buerokratt-chat:8086
      - REACT_APP_MENU_URL=https://admin.dev.buerokratt.ee
      - REACT_APP_MENU_PATH=/chat/menu.json
      - REACT_APP_CONVERSATIONS_BASE_URL=http://localhost:8080/chat
      - REACT_APP_TRAINING_BASE_URL=http://localhost:8080/training
      - REACT_APP_ANALYTICS_BASE_URL=http://localhost:8080/analytics
      - REACT_APP_SERVICES_BASE_URL=http://localhost:8080/services
      - REACT_APP_SETTINGS_BASE_URL=http://localhost:8080/settings
      - REACT_APP_MONITORING_BASE_URL=http://localhost:8080/monitoring
      - REACT_APP_SERVICE_ID=conversations,settings,monitoring
    build:
      context: ./GUI
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "1G"

  chat-widget:
    container_name: chat-widget
    image: chat-widget
    ports:
      - 3003:3003
    networks:
      - bykstack

  authentication-layer:
    container_name: authentication-layer
    image: authentication-layer
    ports:
      - 3004:3004
    networks:
      - bykstack

  opensearch-node:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch-node
    environment:
      - node.name=opensearch-node
      - discovery.seed_hosts=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - bykstack

  notifications-node:
    container_name: notifications-node
    build:
      context: ./notification-server
      dockerfile: Dockerfile
    ports:
      - 4040:4040
    depends_on:
      - opensearch-node
    environment:
      OPENSEARCH_PROTOCOL: http
      OPENSEARCH_HOST: opensearch-node
      OPENSEARCH_PORT: 9200
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: admin
      PORT: 4040
      REFRESH_INTERVAL: 1000
      QUEUE_REFRESH_INTERVAL: 4000
      CORS_WHITELIST_ORIGINS: http://localhost:3001,http://localhost:3003,http://localhost:3004,http://localhost:8080
      RUUTER_URL: http://ruuter-public:8086
      CHAT_TERMINATION_DELAY: 5000
    volumes:
      - /app/node_modules
      - ./notification-server:/app
    networks:
      - bykstack

  s3-ferry:
    container_name: s3-ferry
    image: s3-ferry
    user: root
    volumes:
      - rasa-training-data:/api/data
    environment:
      - API_CORS_ORIGIN=*
      - API_DOCUMENTATION_ENABLED=true

      - S3_REGION=us-east-1
      - S3_ENDPOINT_URL=http://localstack-2:4566
      - S3_ACCESS_KEY_ID=accessKey
      - S3_SECRET_ACCESS_KEY=secretKey
      - S3_DATA_BUCKET_NAME=buerokratt
      - S3_DATA_BUCKET_PATH=

      - FS_DATA_DIRECTORY_PATH=./data
    ports:
      - 3005:3000
    networks:
      - bykstack

  localstack:
    container_name: localstack
    image: localstack/localstack:3.3.0
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3:4566
    volumes:
      - ./localstack-init.sh:/etc/localstack/init/ready.d/init.sh
    networks:
      - bykstack

  bot:
    container_name: bot
    image: rasa
    ports:
      - 5005:5005
    volumes:
      - ./loba/:/app
      - ./cc.et.300.bin:/app/fasttext_et_model/cc.et.300.bin
      - rasa-training-data:/app/models
    environment:
      - SQLALCHEMY_WARN_20=1
    command: ["run", "--enable-api"]
    restart: always
    networks:
      - bykstack
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

volumes:
  opensearch-data:
  rasa-training-data:
networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
