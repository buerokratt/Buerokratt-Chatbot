version: "3.9"

services:
  ruuter-public:
    container_name: ruuter-public
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:8086,http://localhost:3001,http://localhost:3003,http://localhost:8080
      - application.httpCodesAllowList=200,201,202,400,401,403,500
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8086
    volumes:
      - ./DSL/Ruuter-public/DSL:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8086:8086
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "512M"

  ruuter-private:
    container_name: ruuter-private
    image: ruuter
    environment:
      - application.cors.allowedOrigins=http://localhost:8082,http://localhost:3001,http://localhost:3003
      - application.httpCodesAllowList=200,201,202,400,401,403,500
      - application.logging.displayRequestContent=true
      - application.logging.displayResponseContent=true
      - server.port=8088
    volumes:
      - ./DSL/Ruuter-private/DSL:/DSL
      - ./constants.ini:/app/constants.ini
    ports:
      - 8088:8088
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "512M"

  tim:
    container_name: tim
    image: tim
    depends_on:
      - tim-postgresql
    ports:
      - 8085:8085
    networks:
      - bykstack
    extra_hosts:
      - "host.docker.internal:host-gateway"
    cpus: "0.5"
    mem_limit: "512M"

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./tim-db:/var/lib/postgresql/data
    ports:
      - 9876:5432
    networks:
      - bykstack

  data-mapper:
    container_name: data-mapper
    image: data-mapper
    environment:
      - PORT=3000
      - CONTENT_FOLDER=/data
    volumes:
      - ./DSL:/data
      - ./DSL/DMapper-v2/hbs:/workspace/app/views/chat-bot
      - ./DSL/DMapper-v2/js:/workspace/app/js/chat-bot
      - ./DSL/DMapper-v2/lib:/workspace/app/lib
    ports:
      - 3000:3000
    networks:
      - bykstack

  resql:
    container_name: resql
    image: resql
    depends_on:
      - users_db
    environment:
      - sqlms.datasources.[0].name=byk
      - sqlms.datasources.[0].jdbcUrl=jdbc:postgresql://171.22.247.13:5433/byk?sslmode=require
      - sqlms.datasources.[0].username=byk
      - sqlms.datasources.[0].password=2nH09n6Gly
      - logging.level.org.springframework.boot=INFO
    ports:
      - 8082:8082
    volumes:
      - ./DSL/Resql:/workspace/app/templates/byk
    networks:
      - bykstack

  users_db:
    container_name: users_db
    image: postgres:14.1
    environment:
      - POSTGRES_USER=byk
      - POSTGRES_PASSWORD=01234
      - POSTGRES_DB=byk
    ports:
      - 5433:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - bykstack

  gui:
    container_name: gui
    environment:
      - NODE_ENV=development
      - BASE_URL=http://localhost:8080
      - REACT_APP_RUUTER_API_URL=http://localhost:8080
      - REACT_APP_RUUTER_V1_PRIVATE_API_URL=http://localhost:8090
      - REACT_APP_RUUTER_V2_PRIVATE_API_URL=http://localhost:8088
      - REACT_APP_CUSTOMER_SERVICE_LOGIN=http://localhost:3004/et/dev-auth
      - CHOKIDAR_USEPOLLING=true
      - PORT=3001
    build:
      context: ./GUI
      # target: web // To be used in production (Dockerfile)
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3001
    volumes:
      - /app/node_modules
      - ./GUI:/app
    networks:
      - bykstack
    cpus: "0.5"
    mem_limit: "1G"

  chat-widget:
    container_name: chat-widget
    image: chat-widget
    ports:
      - 3003:3003
    networks:
      - bykstack

  customer-service:
    container_name: customer-service
    image: customer-service
    ports:
      - 3004:3004
    networks:
      - bykstack

  opensearch-node:
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - bykstack

  notifications-node:
    container_name: notifications-node
    build:
      context: ./notification-server
      dockerfile: Dockerfile
    ports:
      - 4040:4040
    depends_on:
      - opensearch-node
    environment:
      OPENSEARCH_PROTOCOL: http
      OPENSEARCH_HOST: opensearch-node
      OPENSEARCH_PORT: 9200
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: admin
      PORT: 4040
      REFRESH_INTERVAL: 1000
    volumes:
      - ./notification-server:/app
      - ./notification-server/node_modules:/app/node_modules
    command: ["npm", "run", "dev"]
    networks:
      - bykstack

  nginx:
    image: nginx:latest
    container_name: nginx-node
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - notifications-node
    networks:
      - bykstack

volumes:
  opensearch-data:
networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
