extractRequestData:
  assign:
    id: "${incoming.body.id}"
    customerSupportId: "${incoming.body.customerSupportId}"
    customerSupportDisplayName: "${incoming.body.customerSupportDisplayName}"
    csaTitle: "${incoming.body.csaTitle}"
    forwardedByUser: "${incoming.body.forwardedByUser}"
    forwardedFromCsa: "${incoming.body.forwardedFromCsa}"
    forwardedToCsa: "${incoming.body.forwardedToCsa}"

getActiveChatById:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/get-active-chat-by-id"
    body:
      id: ${id}
  result: activeChatRes
  next: checkActiveChatResult 

checkActiveChatResult:
  switch:
    - condition: ${activeChatRes.response.body.length > 0}
      next: assignChat
  next: return_chat_ended

assignChat:
  assign:
    activeChat: ${activeChatRes.response.body[0]}
  next: redirectChat

redirectChat:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/insert-chat"
    body:
      id: ${id}
      customerSupportId: ${customerSupportId}
      customerSupportDisplayName: ${customerSupportDisplayName}
      csaTitle: ${csaTitle}
      endUserId: ${activeChat.endUserId}
      endUserFirstName: ${activeChat.endUserFirstName}
      endUserLastName: ${activeChat.endUserLastName}
      status: "REDIRECTED"
      endUserEmail: ${activeChat.endUserEmail}
      endUserPhone: ${activeChat.endUserPhone}
      endUserOs: ${activeChat.endUserOs}
      endUserUrl: ${activeChat.endUserUrl}
      feedbackText: ""
      feedbackRating: ""
      externalId: ${activeChat.externalId}
      created: ${activeChat.created}
      ended: ${activeChat.ended}
      forwardedTo: ${activeChat.forwardedTo}
      forwardedToName: ${activeChat.forwardedToName}
      receivedFrom: ${activeChat.receivedFrom}
      receivedFromName: ${activeChat.receivedFromName}
  result: redirectChatRes
  next: getUuid

getUuid:
  call: http.post
  args:
    url: "[#CHATBOT_DMAPPER]:[#CHATBOT_DMAPPER_PORT]/hbs/chat-bot/return_uuid"
    headers:
      type: json
  result: uuid_result
  next: assignUuid

assignUuid:
  assign:
    uuid: ${uuid_result.response.body.uuid}
  next: insertMessage  

insertMessage:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/insert-message"
    body:
      chatId: ${activeChat.id}
      messageId: ${uuid}
      content: ""
      authorTimestamp: ${new Date().toISOString()}
      authorId: ""
      authorFirstName: ""
      authorRole: "buerokratt"
      created: ${new Date().toISOString()}
      authorLastName: ""
      rating: ""
      event: "redirected"
      forwardedByUser: ${forwardedByUser}
      forwardedFromCsa: ${forwardedFromCsa}
      forwardedToCsa: ${forwardedToCsa}
  result: insertMessageResult
  next: getRedirectedChat 

getRedirectedChat:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/get-active-chat-by-id"
    body:
      id: ${id}
  result: redirectedChatRes
  next: return_result

return_result:
  return: ${redirectedChatRes.response.body}
  next: end

return_chat_ended:
  return: "Chat Has Ended"
  status: 400
  next: end 
