declaration:
  call: declare
  version: 0.1
  description: "Decription placeholder for 'Delete conversations'"
  method: post
  accepts: json
  returns: json
  namespace: training
  allowlist:
    params:
      - field: isAuth
        type: boolean
        description: "Body field 'isAuth'"

assignValue:
  assign:
    isAuth: ${incoming.params.isAuth}

backupConversations:
  call: http.post
  args:
    url: "[#CHATBOT_RUUTER_PRIVATE]/chats/back-up-removable-chats"
    body:
      isAuth: ${isAuth}
  result: chats

validateResponse:
  switch:
    - condition: ${chats.response.body.response.length > 0}
      next: emptyMessages
  next: return_not_found

emptyMessages:
  call: http.post
  args:
    url: "[#CHATBOT_RUUTER_PRIVATE]/chats/empty-conversations-by-chat-ids"
    body:
      chatIds: ${chats.response.body.response}
  result: res

returnSuccess:
  return: "Conversations emptied."
  next: end

return_not_found:
  return: "No messages were found."
  next: end