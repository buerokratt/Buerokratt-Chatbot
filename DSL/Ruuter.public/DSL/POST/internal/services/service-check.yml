extract_body:
  assign:
    content: ${incoming.body.content}
    chatId: ${incoming.body.chatId}
    authorId: ${incoming.body.authorId}

check_for_service:
  switch:
    - condition: ${content.match(/^#revenue/) != null}
      next: assign_revenue
    - condition: ${content.match(/^#employees/) != null}
      next: assign_employees
    - condition: ${content.match(/^#taxes/) != null}
      next: assign_taxes
    - condition: ${content.match(/^#workforcetaxes/) != null}
      next: assign_workforce_taxes
    - condition: ${content.match(/^#beneficiaries/) != null}
      next: assign_beneficiaries
    - condition: ${content.match(/^#relatedpersons/) != null}
      next: assign_relatedpersons
    - condition: ${content.match(/^#companycontacts/) != null}
      next: assign_company_contacts
    - condition: ${content.match(/^#companydatasimple/) != null}
      next: assign_company_data_simple
  return: return_no_service 

assign_revenue:
  assign:
    url: "revenue"
  next: get_company_requested_info

assign_employees:
  assign:
    url: "employees"
  next: get_company_requested_info

assign_taxes:
  assign:
    url: "taxes"
  next: get_company_requested_info

assign_workforce_taxes:
  assign:
    url: "work-force-taxes"
  next: get_company_requested_info

assign_beneficiaries:
  assign:
    url: "beneficiaries"
  next: get_company_requested_info

assign_related_persons:
  assign:
    url: "related-persons"
  next: get_company_requested_info

assign_company_contacts:
  assign:
    url: "contacts"
  next: get_company_requested_info

assign_company_data_simple:
  assign:
    url: "simple-data"
  next: get_company_requested_info

get_company_requested_info:
  call: http.post
  args:
    url: "[#CHATBOT_RUUTER_PUBLIC]/internal/services/companies/${url}"
    body:
      content: "${content}"
      chatId: "${chatId}"
      authorId: "${authorId}"
  result: res
  next: return_result

return_result:
  return: ${res}
  next: end

return_no_service:
  return: "No service found"
  next: end
