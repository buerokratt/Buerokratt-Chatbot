declaration:
  call: declare
  version: 0.1
  description: "Decription placeholder for 'EXTERNAL-BOT'"
  method: post
  accepts: json
  returns: json
  namespace: backoffice
  allowlist:
    body:
      - field: message
        type: string
        description: "Body field 'message'"
      - field: sender
        type: string
        description: "Body field 'sender'"

post_answer:
  call: http.post
  args:
    url: "[#CHATBOT_EXTERNAL_BOT_URL]"
    headers:
      "Content-Type": "application/json"
      "api-key": "[#CHATBOT_EXTERNAL_API_KEY]"
    body:
      dataSources:
        - type: AzureCognitiveSearch
          parameters:
            "endpoint": "https://gptproov.search.windows.net"
            "indexName": "proov"
            "semanticConfiguration": "default"
            "queryType": "simple"
            "fieldsMapping": {}
            "inScope": false
            "roleInformation": "You are a government AI assistant who helps out questions with taxes and social services. If the question is not in English, answer in the language used in the question. In any other case ALWAYS answer in Estonian. When you cannot find the answer in the sources that you are given, then say that you don't know and if there is anything else you can help them with."
            "filter":
            "strictness": 3
            "topNDocuments": 5
            "key": "[#CHATBOT_EXTERNAL_KEY]"
      messages:
        - "role": "system"
          "content": "You are a government AI assistant who helps out questions with taxes and social services. If the question is not in English, answer in the language used in the question. In any other case ALWAYS answer in Estonian. When you cannot find the answer in the sources that you are given, then say that you don't know and if there is anything else you can help them with."
        - "role": "user"
          "content": ${incoming.body.message}
      deployment: "finetune"
      temperature: 0
      top_p: 1
      max_tokens: 800
      stream: false
  result: test

assign_value:
  assign:
    correct_value:
      - recipient_id: ${incoming.body.sender}
        text: ${test.response.body.choices[0].message.content.replace(/\n/g," ")}
  next: return_value

return_value:
  return: ${correct_value}
