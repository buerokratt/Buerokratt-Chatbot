extractRequestData:
  assign:
    widgetAnimation: ${incoming.body.widgetAnimation}
    widgetProactiveSeconds: ${incoming.body.widgetProactiveSeconds}
    widgetDisplayBubbleMessageSeconds: ${incoming.body.widgetDisplayBubbleMessageSeconds}
    widgetBubbleMessageText: ${incoming.body.widgetBubbleMessageText}
    widgetColor: ${incoming.body.widgetColor}
    isWidgetActive: ${incoming.body.isWidgetActive}
  next: setWidgetConfig 

setWidgetConfig:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/set-widget-config"
    body:
      widgetProactiveSeconds: ${widgetProactiveSeconds}
      widgetDisplayBubbleMessageSeconds: ${widgetDisplayBubbleMessageSeconds}
      widgetBubbleMessageText: ${widgetBubbleMessageText}
      widgetColor: ${widgetColor}
      isWidgetActive: ${isWidgetActive}
      widgetAnimation: ${widgetAnimation}
      created: ${new Date().toISOString()}
  result: setWidgetConfigResult
  next: mapWidgetConfigData

mapWidgetConfigData:
  call: http.post
  args:
    url: "[#CHATBOT_DMAPPER]:[#CHATBOT_DMAPPER_PORT]/json/v2/return_widget_config"
    body:
      configurationArray: ${setWidgetConfigResult.response.body}
  result: widgetConfigData
  next: returnSuccess

returnSuccess:
  return: ${widgetConfigData.response.body}
  next: end
