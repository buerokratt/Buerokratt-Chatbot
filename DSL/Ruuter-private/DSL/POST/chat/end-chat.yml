extractRequestData:
  assign:
    chatId: "${incoming.body.chatId}"
    event: "${incoming.body.event}"
    authorTimestamp: "${incoming.body.authorTimestamp}"
  next: deleteMessagePreview  

deleteMessagePreview:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/delete-message-preview"
    body:
      chatId: ${chatId}
  result: res
  next: getMessageUuid 

getMessageUuid:
  call: http.post
  args:
    url: "[#CHATBOT_DMAPPER]:[#CHATBOT_DMAPPER_PORT]/hbs/chat-bot/return_uuid"
    headers:
      type: json
  result: message_uuid_result
  next: assignMessageUuid

assignMessageUuid:
  assign:
    messageUuid: ${message_uuid_result.response.body.uuid}
  next: getActiveChatById  

getActiveChatById:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/get-active-chat-by-id"
    body:
      id: ${chatId}
  result: activeChatRes
  next: checkActiveChatResult 

checkActiveChatResult:
  switch:
    - condition: ${activeChatRes.response.body.length > 0}
      next: assignChat
  next: return_chat_ended

assignChat:
  assign:
    activeChat: ${activeChatRes.response.body[0]}
  next: postMessage  

postMessage:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/insert-message"
    body:
      chatId: ${chatId}
      messageId: ${messageUuid}
      content: ""
      authorTimestamp: ${authorTimestamp}
      authorId: ""
      authorFirstName: ""
      authorLastName: ""
      authorRole: "backoffice-user"
      created: "${new Date().toISOString()}"
      rating: ""
      event: ${event}
      forwardedByUser: ""
      forwardedFromCsa: ""
  result: message_res
  next: endChat  

endChat:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/insert-chat"
    body:
      id: ${activeChat.id}
      customerSupportId: ${activeChat.customerSupportId}
      customerSupportDisplayName: ${activeChat.customerSupportDisplayName}
      csaTitle: ${activeChat.csaTitle}
      endUserId: ${endUserId}
      endUserFirstName: ${activeChat.endUserFirstName}
      endUserLastName: ${activeChat.endUserLastName}
      status: "ENDED"
      created: ${activeChat.created}
      ended: ${new Date().toISOString()}
      feedbackRating: ${activeChat.feedbackRating}
      feedbackText: ${activeChat.feedbackText}
      endUserEmail: ${activeChat.endUserEmail}
      endUserPhone: ${activeChat.endUserPhone}
      endUserOs: ${activeChat.endUserOs}
      endUserUrl: ${activeChat.endUserUrl}
      externalId: ${activeChat.externalId}
      forwardedTo: ${activeChat.forwardedTo}
      forwardedToName: ${activeChat.forwardedToName}
      receivedFrom: ${activeChat.receivedFrom}
      reveivedFromName: ${activeChat.reveivedFromName}
  result: end_chat_res
  next: return_result    

return_result:
  return: "Ended Chat Successfully"
  next: end

return_chat_ended:
  return: "Chat Has Ended"
  status: 400
  next: end  
