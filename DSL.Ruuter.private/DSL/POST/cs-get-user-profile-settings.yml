extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}
    userId: ${incoming.body.userId}
  next: check_if_authorized

check_if_authorized:
  template: templates/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authority_result
  next: check_authority_result

check_authority_result:
  switch:
    - condition: ${authority_result !== "false"}
      next: getUserSettings
  next: returnUnauthorized 

getUserSettings:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/get-user-profile-settings"
    body:
      userId: ${userId}
  result: getUserSettingsResult
  next: validateUserSettingsResultExists

validateUserSettingsResultExists:
  switch:
    - condition: "${getUserSettingsResult.response.body.length > 0}"
      next: returnSuccess
  next: returnNotFound

returnSuccess:
  return: ${getUserSettingsResult.response.body}
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end

returnNotFound:
  return: "error: not found"
  next: end
