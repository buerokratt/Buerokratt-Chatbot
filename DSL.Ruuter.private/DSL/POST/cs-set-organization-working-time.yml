extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}
    organizationWorkingTimeStartISO: ${incoming.body.organizationWorkingTimeStartISO}
    organizationWorkingTimeEndISO: ${incoming.body.organizationWorkingTimeEndISO}
    organizationWorkingTimeWeekdays: ${incoming.body.organizationWorkingTimeWeekdays}
    organizationWorkingTimeNationalHolidays: ${incoming.body.organizationWorkingTimeNationalHolidays}
  next: check_if_authorized

check_if_authorized:
  template: templates/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authority_result
  next: check_authority_result

check_authority_result:
  switch:
    - condition: ${authority_result !== "false"}
      next: validateBody
  next: returnUnauthorized

validateBody:
  switch:
    - condition: "${!!(new Date(organizationWorkingTimeStartISO) && new Date(organizationWorkingTimeEndISO)) && typeof organizationWorkingTimeNationalHolidays === 'boolean' && typeof organizationWorkingTimeWeekdays === 'object'}"
      next: setOrganizationWorkingTime
  next: returnInvalidBody

setOrganizationWorkingTime:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/set-organization-working-time"
    body:
      organizationWorkingTimeStartISO: ${organizationWorkingTimeStartISO}
      organizationWorkingTimeEndISO: ${organizationWorkingTimeEndISO}
      organizationWorkingTimeWeekdays: ${organizationWorkingTimeWeekdays.join(",")}
      organizationWorkingTimeNationalHolidays: ${organizationWorkingTimeNationalHolidays}
      created: ${new Date().toISOString()}
  result: setOrganizationWorkingTimeResult
  next: mapOrganizationWorkingTimeData

mapOrganizationWorkingTimeData:
  call: http.post
  args:
    url: "[#CHATBOT_DMAPPER_V2]:[#CHATBOT_DMAPPER_V2_PORT]/hbs/chat-bot/return_organization_working_time"
    headers:
      type: json
    body:
      configurationArray: ${setOrganizationWorkingTimeResult.response.body}
  result: organizationWorkingTimeData
  next: returnSuccess

returnSuccess:
  return: ${organizationWorkingTimeData.response.body}
  next: end

returnInvalidBody:
  return: "error: invalid body"
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end
