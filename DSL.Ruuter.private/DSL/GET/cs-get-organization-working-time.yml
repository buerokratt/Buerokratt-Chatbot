extractRequestData:
  assign:
    cookie: ${incoming.headers.cookie}
  next: check_if_authorized

check_if_authorized:
  template: templates/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authority_result
  next: check_authority_result

check_authority_result:
  switch:
    - condition: ${authority_result !== "false"}
      next: getOrganizationWorkingTime
  next: returnUnauthorized

getOrganizationWorkingTime:
  call: http.post
  args:
    url: "[#CHATBOT_RESQL]:[#CHATBOT_RESQL_PORT]/get-organization-working-time"
  result: getOrganizationWorkingTimeValueResult
  next: validateOrganizationWorkingTimeExists

validateOrganizationWorkingTimeExists:
  switch:
    - condition: "${getOrganizationWorkingTimeValueResult.response.body.length > 0}"
      next: mapWorkingTimeData
  next: returnNotFound

mapWorkingTimeData:
  call: http.post
  args:
    url: "[#CHATBOT_DMAPPER_V2]:[#CHATBOT_DMAPPER_V2_PORT]/hbs/chat-bot/return_organization_working_time"
    headers:
      type: json
    body:
      configurationArray: ${getOrganizationWorkingTimeValueResult.response.body}
  result: workingTimeData
  next: returnSuccess

returnSuccess:
  return: ${workingTimeData.response.body}
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  next: end

returnNotFound:
  return: "error: not found"
  next: end
